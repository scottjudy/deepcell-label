# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on: [push, pull_request]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: visualizer
          start: |
            npm start
            npm run cypress:backend
          wait-on: "http://localhost:3000, http://localhost:5000/health"

      - name: Cypress Coveralls
        uses: coverallsapp/github-action@master
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        with:
          base-path: visualizer
          path-to-lcov: visualizer/coverage/lcov.info
          github-token: ${{ secrets.github_token }}
          flag-name: cypress
          parallel: true

  frontend-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: "visualizer/**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('visualizer/**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Yarn Install
        working-directory: visualizer
        run: yarn

      - name: Lint
        working-directory: visualizer
        run: yarn lint

      - name: Unit Tests
        working-directory: visualizer
        run: yarn test --coverage
        env:
          CI: true

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        with:
          base-path: visualizer
          path-to-lcov: visualizer/coverage/lcov.info
          github-token: ${{ secrets.github_token }}
          flag-name: node-${{ matrix.node-version }}
          parallel: true

  backend-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run PyTest
        run: |
          pytest deepcell_label --cov deepcell_label

      - name: Coveralls
        if: env.COVERALLS_REPO_TOKEN != null
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_FLAG_NAME: python-${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: |
          coveralls

  coveralls:
    name: Finish Coveralls
    needs: [e2e-tests, frontend-tests, backend-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
